
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link href="~/css/style.css" rel="stylesheet" />
        <link href="~/css/styleListaProveedores.css" rel="stylesheet"/>
        <link href="~/images/icono-web.webp" rel="icon" />
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
        <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
        <title>Administración Proveedores</title>
    </head>
    <body>
        <main class="main-page-container">
		    @Html.Partial("_NavAdmin")
            <section class="page-content">
                <div class="content-header">
                    <h1>Lista de proveedores</h1>
                </div>
               <div class="content-body">
                    <div class="table-options">
                        <div class="input-container search-input-container">
                            <svg class="w-6 h-6 text-gray-800 dark:text-white m-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                <path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="m21 21-3.5-3.5M17 10a7 7 0 1 1-14 0 7 7 0 0 1 14 0Z" />
                            </svg>

                           
                            <div class="input-wrapper">
                            <input type="text" id="searchBox" required>
                            <label for="searchBox" class="adaptive-label" placeholder="Buscar por NIT o nombre de proveedor" alt="Buscar por NIT o nombre de proveedor"></label>

                            </div>
                        </div>

                    </div>
                     <div class="table-responsive border border-secondary-subtl rounded m-2">
                        <table class="table table-hover table-borderless align-middle">
                            <thead class="text-center main-table-header">
                                <tr>
                                    <th scope="col">Nit</th>
                                    <th scope="col">Nombre</th>
                                    <th scope="col">Dirección</th>
                                    <th scope="col">Correo Electroníco</th>
                                    <th scope="col">Telefóno</th>
                                    <th socpe='col'>Acciones</th>
                                    
                                </tr>
                            </thead>
                            <tbody class="text-center" id="providerTableBody">
                                
                            </tbody>
                        </table>
                     </div>
                    <div>
                    <div class="col-md-12 text-center" id="pagination">

                    </div>
                    <div class="modal fade" id="userInfoModal" tabindex="-1" aria-labelledby="userInfoLabel" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered ">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
                                        <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
                                        <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1" />
                                    </svg>
                                    <h5 class="modal-title" id="userInfolLabel"></h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                   <form >
                                         <div class="input-container form-input-container">
                                            <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 9h3m-3 3h3m-3 3h3m-6 1c-.306-.613-.933-1-1.618-1H7.618c-.685 0-1.312.387-1.618 1M4 5h16a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1Zm7 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z" />
                                            </svg>
                                        
										 
                                            <div class="input-wrapper">
                                                <input type="text" id="nit-input" required disabled>
                                                <label for="nit-input" class="adaptive-label" placeholder="Nit" alt="Nit"></label>
                                            </div>
                                        </div>

                                        <div class="input-container form-input-container">
                                            <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                                <path stroke="currentColor" stroke-width="2" d="M7 17v1a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1a3 3 0 0 0-3-3h-4a3 3 0 0 0-3 3Zm8-9a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                                            </svg>

                                            <div class="input-wrapper">
                                                <input type="text" id="name-input" required>
                                                <label for="name-input" class="adaptive-label" placeholder="Nombre Proveedor" alt="Nombre Proveedor"></label>

                                            </div>
                                        </div>
                                      
                                        <div class="input-container form-input-container">
                                            <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m4 12 8-8 8 8M6 10.5V19a1 1 0 0 0 1 1h3v-3a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3h3a1 1 0 0 0 1-1v-8.5" />
                                            </svg>

                                            <div class="input-wrapper">
                                                <input type="text" id="address-input" required>
                                                <label for="address-input" class="adaptive-label" placeholder="Dirección" alt="Dirección"></label>

                                            </div>
                                        </div>
                                        <div class="input-container form-input-container">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-envelope-at" viewBox="0 0 16 16">
                                                <path d="M2 2a2 2 0 0 0-2 2v8.01A2 2 0 0 0 2 14h5.5a.5.5 0 0 0 0-1H2a1 1 0 0 1-.966-.741l5.64-3.471L8 9.583l7-4.2V8.5a.5.5 0 0 0 1 0V4a2 2 0 0 0-2-2zm3.708 6.208L1 11.105V5.383zM1 4.217V4a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v.217l-7 4.2z" />
                                                <path d="M14.247 14.269c1.01 0 1.587-.857 1.587-2.025v-.21C15.834 10.43 14.64 9 12.52 9h-.035C10.42 9 9 10.36 9 12.432v.214C9 14.82 10.438 16 12.358 16h.044c.594 0 1.018-.074 1.237-.175v-.73c-.245.11-.673.18-1.18.18h-.044c-1.334 0-2.571-.788-2.571-2.655v-.157c0-1.657 1.058-2.724 2.64-2.724h.04c1.535 0 2.484 1.05 2.484 2.326v.118c0 .975-.324 1.39-.639 1.39-.232 0-.41-.148-.41-.42v-2.19h-.906v.569h-.03c-.084-.298-.368-.63-.954-.63-.778 0-1.259.555-1.259 1.4v.528c0 .892.49 1.434 1.26 1.434.471 0 .896-.227 1.014-.643h.043c.118.42.617.648 1.12.648m-2.453-1.588v-.227c0-.546.227-.791.573-.791.297 0 .572.192.572.708v.367c0 .573-.253.744-.564.744-.354 0-.581-.215-.581-.8Z" />
                                            </svg>
                                            <div class="input-wrapper">
                                                <input type="email" id="email-input" required>
                                                <label for="email-input" class="adaptive-label" placeholder="Correo Electrónico" alt="Correo Electrónico"></label>

                                            </div>
                                        </div>
                                        <div class="input-container form-input-container">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-telephone" viewBox="0 0 16 16">
                                                <path d="M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.6 17.6 0 0 0 4.168 6.608 17.6 17.6 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.68.68 0 0 0-.58-.122l-2.19.547a1.75 1.75 0 0 1-1.657-.459L5.482 8.062a1.75 1.75 0 0 1-.46-1.657l.548-2.19a.68.68 0 0 0-.122-.58zM1.884.511a1.745 1.745 0 0 1 2.612.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.68.68 0 0 0 .178.643l2.457 2.457a.68.68 0 0 0 .644.178l2.189-.547a1.75 1.75 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.6 18.6 0 0 1-7.01-4.42 18.6 18.6 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877z" />
                                            </svg>
                                            <div class="input-wrapper">
                                                <input type="text" id="phone-input" required>
                                                <label for="phone-input" class="adaptive-label" placeholder="Teléfono" alt="Teléfono"></label>

                                            </div>
                                        </div>
                                        <div class="mt-2">
                                            <button class="custom-button" id="restorePass-btn" type="button">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-repeat m-1" viewBox="0 0 16 16">
                                                    <path d="M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41m-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9" />
                                                    <path fill-rule="evenodd" d="M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5 5 0 0 0 8 3M3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9z" />
                                                </svg>
                                                   Reestrablecer contraseña
                                            </button>
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <div id="alerts-container">
                                        
                                    </div>

                                    <button type="button" class="custom-button" style="width:20%" id="save-btn">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-floppy m-1" viewBox="0 0 16 16">
                                            <path d="M11 2H9v3h2z" />
                                            <path d="M1.5 0h11.586a1.5 1.5 0 0 1 1.06.44l1.415 1.414A1.5 1.5 0 0 1 16 2.914V14.5a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 14.5v-13A1.5 1.5 0 0 1 1.5 0M1 1.5v13a.5.5 0 0 0 .5.5H2v-4.5A1.5 1.5 0 0 1 3.5 9h9a1.5 1.5 0 0 1 1.5 1.5V15h.5a.5.5 0 0 0 .5-.5V2.914a.5.5 0 0 0-.146-.353l-1.415-1.415A.5.5 0 0 0 13.086 1H13v4.5A1.5 1.5 0 0 1 11.5 7h-7A1.5 1.5 0 0 1 3 5.5V1H1.5a.5.5 0 0 0-.5.5m3 4a.5.5 0 0 0 .5.5h7a.5.5 0 0 0 .5-.5V1H4zM3 15h10v-4.5a.5.5 0 0 0-.5-.5h-9a.5.5 0 0 0-.5.5z" />
                                        </svg>
                                        Guardar
                                    </button>
                                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">
                                        Cancelar
                                    </button>
                                
                                  
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
              </div>
            </section>
        </main>

        @Html.Partial("_Footer")
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

        <script>
		    document.addEventListener("DOMContentLoaded", function(){
                let currentPage = 1;
                const pageSize = 100;
                const alertContainer = document.getElementById('alerts-container')

                function loadProviders(page = 1, search = ''){
                    const providerTableBody = document.getElementById("providerTableBody")
                    providerTableBody.innerHTML = "";
                    providerTableBody.innerHTML = `<tr><td colspan="6" rowspan="3"> <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                    </td></tr>`;

                    fetch(`/Admin/GetProviders?pageNumber=${page}&pageSize=${pageSize}&search=${search}`)
					    .then(response => response.json())
					    .then(data => {
                            if(data.error){
							    console.error(data.error);
							    return;
                            }

						    providerTableBody.innerHTML = "";

						    if(data.providers.length === 0){
							    providerTableBody.innerHTML = `<tr><td colspan="6">No se encontraron proveedores</td></tr>`;
							    updatePagination(data.currentPage, data.totalProviders);
							    return;
						    }

						    data.providers.forEach(provider => {
                                 const row = `<tr>
                                    <td>${provider.nit}</td>
                                    <td>${provider.nombre}</td>
                                    <td>${(provider.direccion ?? "No registra")}</td>
                                    <td>${(provider.correo ?? "No registra")}</td>
                                    <td>${(provider.telefono ?? "No registra")}</td>
                                    <td>
                                        <input type="hidden" class="selected-nit-input" value="${provider.nit}" />
                                        <button class="action-button" data-bs-toggle="modal" data-bs-target="#userInfoModal">
                                            <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                                 <path stroke="currentColor" stroke-linecap="square" stroke-linejoin="round" stroke-width="2" d="M7 19H5a1 1 0 0 1-1-1v-1a3 3 0 0 1 3-3h1m4-6a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm7.441 1.559a1.907 1.907 0 0 1 0 2.698l-6.069 6.069L10 19l.674-3.372 6.07-6.07a1.907 1.907 0 0 1 2.697 0Z"/>
                                            </svg>
                                        </button>
                                    </td>
                                </tr>`;

                                providerTableBody.innerHTML += row;
                            });

						    actionButtons(data.providers);
                            updatePagination(data.currentPage, data.totalProviders);

                            
                        }).catch(error => console.log("Error:", error));


                }

                function actionButtons(providers){

                        const actionButtons = document.querySelectorAll(".action-button");
                             actionButtons.forEach(button => {
                                button.addEventListener("click", function(){
                                const row = button.closest("tr");

                                const nit = row.querySelector(".selected-nit-input").value;

                                const provider = providers.find(p => p.nit === nit);

                                const userInfoTitle = document.getElementById("userInfolLabel");

                                const nameInput = document.getElementById("name-input");
                                const nitInput = document.getElementById("nit-input");
                                const addressInput = document.getElementById("address-input");
                                const emailInput = document.getElementById("email-input");
                                const phoneInput = document.getElementById("phone-input");

                                userInfoTitle.innerText = provider.nombre;
                                nameInput.value = provider.nombre;
                                nitInput.value = provider.nit;
                                addressInput.value = provider.direccion;
                                emailInput.value = provider.correo;
                                phoneInput.value = provider.telefono;
                             });
                        });
                }

                function updatePagination(currentPage, totalProviders) {
                    const paginationDiv = document.getElementById("pagination");
                    paginationDiv.innerHTML = "";

                    const totalPages = Math.ceil(totalProviders / pageSize);
                    const maxVisiblePages = 10; // Máximo de páginas visibles

                    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
                    let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);

                    if (endPage - startPage < maxVisiblePages - 1) {
                        startPage = Math.max(1, endPage - maxVisiblePages + 1);
                    }

                    const nav = document.createElement("nav");
                    nav.setAttribute("aria-label", "Page navigation");

                    const ul = document.createElement("ul");
                    ul.className = "pagination";

                    // Botón "Previous"
                    const prevLi = document.createElement("li");
                    prevLi.className = `page-item ${currentPage === 1 ? "disabled" : ""}`;
                    const prevLink = document.createElement("a");
                    prevLink.className = "page-link";
                    prevLink.innerText = "<<";
                    prevLink.href = "#";
                    prevLink.onclick = (e) => {
                        e.preventDefault();
                        if (currentPage > 1) {
                            loadProviders(currentPage - 1, document.getElementById("searchBox").value);
                        }
                    };
                    prevLi.appendChild(prevLink);
                    ul.appendChild(prevLi);

                    // Agregar botón "1 ..." si hay más de 10 páginas y no estamos en el inicio
                    if (startPage > 1) {
                        const firstPageLi = document.createElement("li");
                        firstPageLi.className = "page-item";
                        const firstPageLink = document.createElement("a");
                        firstPageLink.className = "page-link";
                        firstPageLink.innerText = "1";
                        firstPageLink.href = "#";
                        firstPageLink.onclick = (e) => {
                            e.preventDefault();
                            loadProviders(1, document.getElementById("searchBox").value);
                        };
                        firstPageLi.appendChild(firstPageLink);
                        ul.appendChild(firstPageLi);

                        const dotsLi = document.createElement("li");
                        dotsLi.className = "page-item disabled";
                        const dotsSpan = document.createElement("span");
                        dotsSpan.className = "page-link";
                        dotsSpan.innerText = "...";
                        dotsLi.appendChild(dotsSpan);
                        ul.appendChild(dotsLi);
                    }

                    // Botones de paginación visibles (máximo 10)
                    for (let i = startPage; i <= endPage; i++) {
                        const li = document.createElement("li");
                        li.className = `page-item ${i === currentPage ? "active" : ""}`;

                        const link = document.createElement("a");
                        link.className = "page-link";
                        link.innerText = i;
                        link.href = "#";
                        link.onclick = (e) => {
                            e.preventDefault();
                            loadProviders(i, document.getElementById("searchBox").value);
                        };

                        li.appendChild(link);
                        ul.appendChild(li);
                    }

                    // Agregar botón "... última página" si hay más de 10 páginas y no estamos al final
                    if (endPage < totalPages) {
                        const dotsLi = document.createElement("li");
                        dotsLi.className = "page-item disabled";
                        const dotsSpan = document.createElement("span");
                        dotsSpan.className = "page-link";
                        dotsSpan.innerText = "...";
                        dotsLi.appendChild(dotsSpan);
                        ul.appendChild(dotsLi);

                        const lastPageLi = document.createElement("li");
                        lastPageLi.className = "page-item";
                        const lastPageLink = document.createElement("a");
                        lastPageLink.className = "page-link";
                        lastPageLink.innerText = totalPages;
                        lastPageLink.href = "#";
                        lastPageLink.onclick = (e) => {
                            e.preventDefault();
                            loadProviders(totalPages, document.getElementById("searchBox").value);
                        };
                        lastPageLi.appendChild(lastPageLink);
                        ul.appendChild(lastPageLi);
                    }

                    // Botón "Next"
                    const nextLi = document.createElement("li");
                    nextLi.className = `page-item ${currentPage === totalPages ? "disabled" : ""}`;
                    const nextLink = document.createElement("a");
                    nextLink.className = "page-link";
                    nextLink.innerText = ">>";
                    nextLink.href = "#";
                    nextLink.onclick = (e) => {
                        e.preventDefault();
                        if (currentPage < totalPages) {
                            loadProviders(currentPage + 1, document.getElementById("searchBox").value);
                        }
                    };
                    nextLi.appendChild(nextLink);
                    ul.appendChild(nextLi);

                    nav.appendChild(ul);
                    paginationDiv.appendChild(nav);
                }

                function updateProvider(){
				    const nameInput = document.getElementById("name-input");
				    const nitInput = document.getElementById("nit-input");
				    const addressInput = document.getElementById("address-input");
				    const emailInput = document.getElementById("email-input");
				    const phoneInput = document.getElementById("phone-input");

                    const regexE = /^\w+([.\-_+]?\w+)*@@\w+([.\-]?\w+)*(\.\w{2,10})+$/;
                    const regexP = /^(\+?\d{1,3}[-.\s]?)?(\d{3}[-.\s]?\d{3}[-.\s]?\d{4})$/;

				    if(!regexE.test(emailInput.value) && emailInput.value){
					    appendAlert('Correo electrónico inválido','danger');
					    return;
				    }

				    if(!regexP.test(phoneInput.value) && phoneInput.value){
				        appendAlert('Teléfono inválido','danger');
					    return;
				    }

				    const provider = {
					    nit: nitInput.value,
					    nombre: nameInput.value,
					    direccion: addressInput.value,
					    correo: emailInput.value,
					    telefono: phoneInput.value
				    };

				    fetch("/Admin/UpdateProvider", {
					    method: "POST",
					    headers: {
						    "Content-Type": "application/json"
					    },
					    body: JSON.stringify(provider)
				    }).then(response => response.json())
					    .then(data => {
						    if (data.error) {
							    appendAlert(data.error,'danger');
							    return;
						    }
                            appendAlert(data.message,'success')
						    loadProviders(currentPage, document.getElementById("searchBox").value);
					    }).catch(error => console.log("Error:", error));
                }



               function appendAlert(message,type){

                  const wrapper = document.createElement('div');

                  wrapper.innerHTML = [
                    `<div class="alert alert-${type} alert-dismissible fade-out" role="alert">`,
                    `   <div>${message}</div>`,
                    '   <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>',
                    '</div>'
                  ].join('');

                  alertContainer.append(wrapper);

                    setTimeout(() => {
                        wrapper.classList.add('hide');
                        setTimeout(() => {
                            wrapper.remove();
                        }, 1000); 
                    }, 3000);

               }

               function restorePassword(){
                    const nit = document.getElementById("nit-input").value;
                        fetch(`/Admin/RestoreProviderPassword?nit=${nit}`,{
					        method: "GET",
						    headers: {
							    "Content-Type": "application/json"
						    }
                        })
					    .then(response => response.json())
					    .then(data => {
						    if(data.error){
							    appendAlert(data.error,'danger');
							    return;
						    }
						    appendAlert(data.message,'success');
                            loadProviders(currentPage, document.getElementById("searchBox").value);
					    }).catch(error => console.log("Error:", error));
               }
        
                document.getElementById("searchBox").addEventListener("input", function () {
                    currentPage = 1;
                    loadProviders(currentPage, this.value);
                });


			    document.getElementById("save-btn").addEventListener("click", function(){
				    updateProvider();
			    });

			    document.getElementById("restorePass-btn").addEventListener("click", function(){
				    restorePassword();
			    });

			    loadProviders(currentPage);
            });
        </script>
        
    </body>
 </html>
